import javafx.application.Application;
import javafx.animation.KeyFrame;
import javafx.animation.Timeline;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.paint.Color;
import javafx.scene.shape.Arc;
import javafx.scene.shape.ArcType;
import javafx.stage.Stage;
import javafx.util.Duration;

public class RunningFan extends Application {
    private double angle = 0;  // Initial angle
    private boolean reverse = false;  // Direction control

    @Override
    public void start(Stage primaryStage) {
        // Create a fan (using 4 arcs to represent blades)
        Arc[] blades = new Arc[4];
        for (int i = 0; i < 4; i++) {
            blades[i] = new Arc(100, 100, 80, 80, angle + i * 90, 40);
            blades[i].setFill(Color.BLACK);
            blades[i].setType(ArcType.ROUND);
        }

        // Animation for rotating the fan
        Timeline animation = new Timeline(new KeyFrame(Duration.millis(100), e -> {
            for (Arc blade : blades) {
                blade.setStartAngle(blade.getStartAngle() + (reverse ? -5 : 5));
            }
        }));
        animation.setCycleCount(Timeline.INDEFINITE);
        animation.play();  // Start the fan animation

        // Create buttons for controlling the fan
        Button pauseButton = new Button("Pause");
        Button resumeButton = new Button("Resume");
        Button reverseButton = new Button("Reverse");

        // Pause the fan
        pauseButton.setOnAction(e -> animation.pause());

        // Resume the fan
        resumeButton.setOnAction(e -> animation.play());

        // Reverse the direction
        reverseButton.setOnAction(e -> reverse = !reverse);

        // Layout
        HBox buttons = new HBox(10, pauseButton, resumeButton, reverseButton);
        BorderPane pane = new BorderPane();
        pane.setBottom(buttons);
        pane.setCenter(new FanPane(blades));
